name: CI

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    name: CI
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache node modules
        id: cacheNodeModules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-cacheNodeModules2-${{ hashFiles('**/package-lock.json', '**/package.json') }}
          restore-keys: ${{ runner.os }}-cacheNodeModules2-

      - name: execute `npm ci` (1)
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: execute `npm ci` (2)
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: npm ci --prefix webpack-plugin

      - name: Install Playwright
        run: npm run playwright-install

      - name: Install OS Dependencies for Playwright
        run: sudo npm run playwright-install-deps

      # TODO: figure this one out, prettier error message does not contain the coding style he does not like which would have been polite to say
      # - name: Check prettier
      #   run: npm run prettier-check

      - name: Build
        run: npm run build-monaco-editor

      - name: Run unit tests
        run: npm test

      - name: Compile webpack plugin
        run: npm run compile --prefix webpack-plugin

      - name: Package using webpack plugin
        run: npm run package-for-smoketest-webpack

      - name: Package using esbuild
        run: npm run package-for-smoketest-esbuild

      - name: Package using vite
        run: npm run package-for-smoketest-vite

      - name: Package using parcel
        run: npm run package-for-smoketest-parcel --prefix test/smoke/parcel

      - name: Run smoke test
        run: npm run smoketest

      - name: Build Boxed Monaco
        working-directory: ./boxed
        run: npm i && npm run build && ls -alhR dist && mv -f dist/boxedmonaco.js ../out/

      # - name: Install website node modules
      #   working-directory: website
      #   run: yarn install --frozen-lockfile

      # - name: Build website
      #   working-directory: website
      #   run: yarn run build

      # - name: Test website
      #   working-directory: website
      #   run: yarn test

      - name: Tar out folder
        working-directory: ./out
        run: tar -czvf boxedmonaco.tar.gz ./*

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y_%m_%d_%H_%M_%S')" >> $GITHUB_OUTPUT

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{  github.ref_name }}-${{ steps.date.outputs.date }}
        run: |
          gh release create "$tag" out/boxedmonaco.tar.gz \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              --generate-notes
